version: '3.8'

services:
  workspace:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
      - frontend_node_modules:/workspace/frontend/node_modules
      - backend_venv:/workspace/backend/.venv
    command: sleep infinity
    environment:
      - DATABASE_URL=postgresql://event_horizon_user:eventhorizon@postgres:5432/event_horizon
      - NODE_ENV=development
      - PYTHONPATH=/workspace/backend
    ports:
      - "5173:5173"
      - "8000:8000"
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: "event_horizon"
      POSTGRES_USER: "event_horizon_user"
      POSTGRES_PASSWORD: "eventhorizon"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/postgresql-ddl:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U event_horizon_user -d event_horizon"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: n8n service for development
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - GENERIC_TIMEZONE=America/New_York
      - TZ=America/New_York
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - NODE_FUNCTION_ALLOW_EXTERNAL=*
      - N8N_RUNNERS_ENABLED=true
      - N8N_PUBLIC_API_DISABLED=false
      - N8N_EDITOR_BASE_URL=http://localhost:5678
      - N8N_API_KEY=dev-api-key
      - N8N_BASE_URL=http://localhost:5678
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres

volumes:
  postgres_data:
  frontend_node_modules:
  backend_venv:
  n8n_data: