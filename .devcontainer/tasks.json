{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start All Services",
            "type": "shell",
            "command": "${workspaceFolder}/start-dev.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Start all development services (frontend, backend, database, n8n)"
        },
        {
            "label": "Start Backend Only",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "uvicorn",
                "main:app",
                "--host",
                "0.0.0.0",
                "--port",
                "8000",
                "--reload"
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Start the FastAPI backend server"
        },
        {
            "label": "Start Frontend Only",
            "type": "shell",
            "command": "pnpm",
            "args": [
                "run",
                "dev",
                "--host",
                "0.0.0.0",
                "--port",
                "5173"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Start the React frontend dev server"
        },
        {
            "label": "Start Database Only",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "-f",
                ".devcontainer/docker-compose.yml",
                "up",
                "-d",
                "postgres"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Start only the PostgreSQL database"
        },
        {
            "label": "Stop All Services",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "-f",
                ".devcontainer/docker-compose.yml",
                "down"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Stop all devcontainer services"
        },
        {
            "label": "Install Python Dependencies",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "uv",
                "sync"
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Install/refresh Python dependencies"
        },
        {
            "label": "Install Node Dependencies",
            "type": "shell",
            "command": "pnpm",
            "args": [
                "install"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Install/refresh Node.js dependencies"
        },
        {
            "label": "Generate Mock Data",
            "type": "shell",
            "command": "${workspaceFolder}/generate-mock-data.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Generate mock data for development"
        },
        {
            "label": "Run All Tests",
            "type": "shell",
            "command": "${workspaceFolder}/run-tests.sh",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run all tests (Python and frontend)"
        },
        {
            "label": "Run Python Tests",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "python",
                "-m",
                "pytest",
                "-v"
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run Python backend tests"
        },
        {
            "label": "Run Frontend Tests",
            "type": "shell",
            "command": "pnpm",
            "args": [
                "test"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run frontend tests"
        },
        {
            "label": "Run E2E Tests",
            "type": "shell",
            "command": "npx",
            "args": [
                "playwright",
                "test"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run end-to-end Playwright tests"
        },
        {
            "label": "Format Python Code",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "black",
                "."
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Format Python code with black"
        },
        {
            "label": "Sort Python Imports",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "isort",
                "."
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Sort Python imports with isort"
        },
        {
            "label": "Lint Python Code",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "flake8",
                "."
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Lint Python code with flake8"
        },
        {
            "label": "Type Check Python Code",
            "type": "shell",
            "command": "source",
            "args": [
                ".venv/bin/activate",
                "&&",
                "mypy",
                "."
            ],
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Type check Python code with mypy"
        },
        {
            "label": "Type Check TypeScript",
            "type": "shell",
            "command": "npx",
            "args": [
                "tsc",
                "-b"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Type check TypeScript code"
        },
        {
            "label": "Lint Frontend Code",
            "type": "shell",
            "command": "pnpm",
            "args": [
                "run",
                "lint"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Lint frontend code with ESLint"
        },
        {
            "label": "Build Frontend",
            "type": "shell",
            "command": "pnpm",
            "args": [
                "run",
                "build"
            ],
            "options": {
                "cwd": "${workspaceFolder}/frontend"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Build frontend for production"
        },
        {
            "label": "Reset Database",
            "type": "shell",
            "command": "docker-compose",
            "args": [
                "-f",
                ".devcontainer/docker-compose.yml",
                "down",
                "-v",
                "postgres"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Reset database (WARNING: This will delete all data)"
        }
    ]
}