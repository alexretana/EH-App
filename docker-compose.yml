services:
  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: eh-app-postgres
    env_file:
      - .env.development
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: ${RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-event_horizon_user} -d ${POSTGRES_DB:-event_horizon}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eh-app-backend
    env_file:
      - .env.development
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: ${RESTART_POLICY:-unless-stopped}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eh-app-frontend
    env_file:
      - .env.development
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      - backend
    restart: ${RESTART_POLICY:-unless-stopped}

  n8n:
    build:
      context: ./n8n
      dockerfile: Dockerfile
    container_name: n8n
    env_file:
      - .env.development
    ports:
      - "${N8N_PORT:-5678}:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/.env:/tmp/.env:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: ${RESTART_POLICY:-unless-stopped}
    stdin_open: true
    tty: true
    
  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass n8n_password --appendonly yes --save 60 1000
    volumes:
      - redis_data:/data

  discord-bot:
    build:
      context: ./discord-bot
      dockerfile: Dockerfile
    container_name: discord-bot
    env_file:
      - .env.development
    ports:
      - "${DISCORD_BOT_PORT:-8545}:8545"
    restart: ${RESTART_POLICY:-unless-stopped}

volumes:
  postgres_data:
  n8n_data:
  redis_data: