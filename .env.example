# Event Horizon Application - Environment Variables Template
# Copy this file to .env.development for local development
# Create .env.production for production deployments
# IMPORTANT: Never commit actual .env files to version control

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database configuration shared across services
POSTGRES_DB=event_horizon
POSTGRES_USER=event_horizon_user
POSTGRES_PASSWORD=eventhorizon
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Database URL for backend service (constructed from above values)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# =============================================================================
# BACKEND CONFIGURATION
# =============================================================================
BACKEND_PORT=8000
BACKEND_HOST=0.0.0.0

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
FRONTEND_PORT=5173
FRONTEND_HOST=0.0.0.0
DOCKER_ENV=true

# =============================================================================
# N8N CONFIGURATION
# =============================================================================
# n8n Instance Configuration
N8N_PORT=5678
N8N_INSTANCE_ID=your_n8n_instance_id_here
N8N_API_KEY=your-secure-api-key-here
N8N_BASE_URL=http://localhost:5678
N8N_EDITOR_BASE_URL=http://localhost:5678

# n8n Settings
GENERIC_TIMEZONE=America/New_York
TZ=America/New_York
N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
NODE_FUNCTION_ALLOW_EXTERNAL=*
N8N_RUNNERS_ENABLED=true
N8N_PUBLIC_API_DISABLED=false

# =============================================================================
# DISCORD BOT CONFIGURATION
# =============================================================================
DISCORD_BOT_TOKEN=<YOUR_DISCORD_BOT_TOKEN_HERE>
DISCORD_CHANNEL_ID=<YOUR_DISCORD_CHANNEL_ID_HERE>
DISCORD_BOT_PORT=54545

# =============================================================================
# N8N WORKFLOW CREDENTIALS
# =============================================================================
# These are typically generated by n8n's sanitize script
# Leave empty for initial setup, populate after first n8n initialization

# Google Calendar OAuth2 API Credentials
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_ACCESS_TOKEN=
GOOGLE_REFRESH_TOKEN=
GOOGLE_TOKEN_EXPIRES_AT=
GOOGLE_CALENDAR_ACCOUNT_CREDENTIAL_ID_4=

# OpenRouter API Credentials
OPENROUTER_API_KEY=
OPENROUTER_ACCOUNT_CREDENTIAL_ID_2=

# Perplexity API Credentials
PERPLEXITY_API_KEY=
PERPLEXITY_ACCOUNT_CREDENTIAL_ID_0=

# PostgreSQL Credential ID (for n8n workflows)
POSTGRES_ACCOUNT_CREDENTIAL_ID_1=

# Redis Credentials
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0
REDIS_ACCOUNT_CREDENTIAL_ID_3=

# SMTP Email Credentials
SMTP_HOST=
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=
SMTP_PASSWORD=
SMTP_ALLOW_UNAUTHORIZED_CERTS=false
SMTP_ACCOUNT_CREDENTIAL_ID_5=

# =============================================================================
# N8N WORKFLOW CONFIGURATION
# =============================================================================
# Webhook IDs (generate unique UUIDs for each webhook)
WEBHOOK_ID_0=00000000-0000-0000-0000-000000000000
WEBHOOK_ID_1=00000000-0000-0000-0000-000000000001
WEBHOOK_ID_2=00000000-0000-0000-0000-000000000002
WEBHOOK_ID_3=00000000-0000-0000-0000-000000000003
WEBHOOK_ID_4=00000000-0000-0000-0000-000000000004

# Email Addresses
USER_EMAIL_0=your_personal_email@example.com
USER_EMAIL_1=your_n8n_agent_email@example.com
USER_EMAIL_2=your_alternate_email@example.com

# Service URLs
URL_URL_0=http://discord-bot:54545/approval-request
WEBHOOKURL_URL_1=http://n8n:5678/webhook/your-webhook-id-here

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Container restart policy
RESTART_POLICY=unless-stopped

# =============================================================================
# NOTES
# =============================================================================
# 1. Database credentials should be changed for production deployments
# 2. Generate secure random values for API keys and passwords
# 3. For n8n credentials, run the sanitize script after first setup
# 4. Discord bot token must be obtained from Discord Developer Portal
# 5. Google OAuth credentials require Google Cloud Console setup